name: repo-sync
author: Arky Asmal
description: Sync one repository branch, with the same or another repo branch
inputs:
  TARGET_REPO_URL:
    required: true
  TARGET_REPO_BRANCH: 
    required: true
  TARGET_REPO_GITHUB_ACCESS_TOKEN:
    required: true
  BOT_NAME: 
    required: true
  BOT_EMAIL:
    required: true 
runs:
  using: 'composite'
  steps: 
    - name: Set Target Repo Env Variables
      uses: ./parseGithubUrl
      with: 
        TARGET_REPO_URL: ${{inputs.TARGET_REPO_URL}}
        TARGET_REPO_GITHUB_ACCESS_TOKEN: ${{inputs.TARGET_REPO_GITHUB_ACCESS_TOKEN}}
    - name: Clear all files
      shell: bash
      #we run rm since we still want it tracked on repo, but not in our local env
      run: |
        rm -rf *
    - name: Add Target Remote with PAT
      continue-on-error: true
      shell: bash
      run: |
        git remote add target ${{env.TARGET_REPO_URL}}
    - name: Clone Target Repo
      shell: bash 
      run: | 
        git clone -o target ${{env.TARGET_REPO_URL}}
    - name: Add Source remote
      shell: bash
      run: |
        git remote add source ${{format('https://github.com/{0}/{1}.git', github.repository_owner, github.event.repository.name)}}
    - name: View remotes
      shell: bash
      run: |
        git remote -v
    - name: Get branches
      shell: bash
      run: |
        git fetch source
        git fetch target
        git branch -avv
    - name: Check out to Target Repo
      shell: bash
      run: |
        git checkout -B ${{inputs.TARGET_REPO_BRANCH}} --track ${{format('target/{0}', inputs.TARGET_REPO_BRANCH)}}
    - name: Setup git config for target repo
      shell: bash
      run: |
        git config user.name ${{inputs.BOT_NAME}}
        git config user.email ${{inputs.BOT_EMAIL}}
    - name: Merge Branches
      shell: bash
      run: |
        git merge ${{format('source/{0}', github.ref_name)}} --allow-unrelated-histories -s recursive -X theirs
    - name: Push to branch
      shell: bash
      run: |
        git push -f ${{env.TARGET_REPO_URL}} ${{inputs.TARGET_REPO_BRANCH}}
    - name: Restore local files
      shell: bash
      run: |
        git fetch && git checkout ${{format('source/{0}', github.event.repository.name)}} 